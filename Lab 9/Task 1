#include <iostream>
#include <string>

using namespace std;

class Patient {
protected:
    string name;
    string id;

public:
    Patient(string n, string i) : name(n), id(i) {}

    virtual void displayTreatment() = 0;
    virtual double calculateCost() = 0;
    virtual ~Patient() {}
};

class InPatient : public Patient {
public:
    InPatient(string n, string i) : Patient(n, i) {}

    void displayTreatment() override {
        cout << "InPatient Treatment for " << name << " (ID: " << id << "):" << endl;
        cout << "- Admitted to hospital\n- Monitored 24/7\n- Medication provided" << endl;
    }

    double calculateCost() override {
        double daysAdmitted = 5;
        double costPerDay = 1500.0;
        return daysAdmitted * costPerDay;
    }
};

class OutPatient : public Patient {
public:
    OutPatient(string n, string i) : Patient(n, i) {}

    void displayTreatment() override {
        cout << "OutPatient Treatment for " << name << " (ID: " << id << "):" << endl;
        cout << "- Visits clinic regularly\n- Prescribed medication\n- No overnight stay" << endl;
    }

    double calculateCost() override {
        double visits = 3;
        double costPerVisit = 500.0;
        return visits * costPerVisit;
    }
};

int main() {
    Patient* p1 = new InPatient("Alice", "IN001");
    Patient* p2 = new OutPatient("Bob", "OUT002");
    p1->displayTreatment();
    cout << "Total Cost: $" << p1->calculateCost() << endl << endl;
    p2->displayTreatment();
    cout << "Total Cost: $" << p2->calculateCost() << endl;
    delete p1;
    delete p2;

    return 0;
}
