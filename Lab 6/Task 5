#include <iostream>
using namespace std;

class Device {
protected:
    int deviceID;
    bool status;

public:
    Device(int id, bool stat) : deviceID(id), status(stat) {}

    void displayDetails() {
        cout << "Device ID: " << deviceID << endl;
        cout << "Status: " << (status ? "On" : "Off") << endl;
    }
};

class SmartPhone : public Device {
protected:
    float screenSize;

public:
    SmartPhone(int id, bool stat, float screen) : Device(id, stat), screenSize(screen) {}

    void displayDetails() {
        Device::displayDetails();
        cout << "Screen Size: " << screenSize << " inches" << endl;
    }
};

class SmartWatch : public Device {
protected:
    bool heartRateMonitor;

public:
    SmartWatch(int id, bool stat, bool hrMonitor) : Device(id, stat), heartRateMonitor(hrMonitor) {}

    void displayDetails() {
        Device::displayDetails();
        cout << "Heart Rate Monitor: " << (heartRateMonitor ? "Yes" : "No") << endl;
    }
};

class SmartWearable : public SmartPhone, public SmartWatch {
private:
    int stepCounter;

public:
    SmartWearable(int id, bool stat, float screen, bool hrMonitor, int steps)
        : SmartPhone(id, stat, screen), SmartWatch(id, stat, hrMonitor), stepCounter(steps) {}

    void displayDetails() {
        SmartPhone::displayDetails();
        SmartWatch::displayDetails();
        cout << "Step Counter: " << stepCounter << endl;
    }
};

int main() {
    int id, steps;
    bool stat, hrMonitor;
    float screen;

    cout << "Enter Device ID: ";
    cin >> id;
    cout << "Enter Status (1 for On, 0 for Off): ";
    cin >> stat;
    cout << "Enter Screen Size: ";
    cin >> screen;
    cout << "Does it have a Heart Rate Monitor? (1 for Yes, 0 for No): ";
    cin >> hrMonitor;
    cout << "Enter Step Counter Value: ";
    cin >> steps;

    SmartWearable wearable(id, stat, screen, hrMonitor, steps);

    cout << "\nDevice Details:\n";
    wearable.displayDetails();

    return 0;
}
