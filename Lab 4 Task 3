#include <iostream>
#include <string>
using namespace std;

class Car {
    string brand;
    string model;
    double rprice;
    bool available;

public:
    Car() {
        brand = "Unknown";
        model = "Generic";
        rprice = 0.0;
        available = true;
    }

    Car(string c, string d, double z, bool k) {
        brand = c;
        model = d;
        rprice = z;
        available = k;
    }

    Car(const Car &other) {
        brand = other.brand;
        model = other.model;
        rprice = other.rprice;
        available = other.available;
        cout << "Copy constructor called: A new car object has been created as a copy." << endl;
    }

    ~Car() {
        cout << "Destructor called: Car object is being deleted." << endl;
    }

    void display() {
        cout << "---------- Welcome ----------" << endl;
        cout << "Brand Name: " << brand << endl;
        cout << "Model: " << model << endl;
        cout << "Rental Price: " << rprice << endl;
        cout << "Availability: " << (available ? "Yes" : "No") << endl;
    }

    void updateDetails(string a, string b, float x, bool y) {
        brand = a;
        model = b;
        rprice = x;
        available = y;
    }

    void rentalRequest() {
        if (available) {
            cout << "Car available for rent." << endl;
        } else {
            cout << "Car is not available." << endl;
        }
    }

	void availibilityChecker() {
        if (available) {
            cout << "This car can be rented right now." << endl;
        } else {
            cout << "This car cannot be rented right now." << endl;
        }
    }

    void applyDiscount(int days) {
        if (days > 5 && days < 10) {
            double temp = rprice * 0.05;
            rprice -= temp;
            cout << "Your discounted price is: " << rprice << endl;
        } else if (days >= 10) {
            double temp = rprice * 0.1;
            rprice -= temp;
            cout << "Your discounted price is: " << rprice << endl;
        } else {
            cout << "Time period not eligible for a discount." << endl;
        }
    }
};

int main() {
    Car c1("Civic", "2012", 50000.0, true);
    c1.display();

    Car c2 = c1;
    cout << "\nCopied Car Details (Before modification of original):\n";
    c2.display();

    c1.updateDetails("City", "2013", 60000.0, false);
    cout << "\nOriginal Car Details (After modification):\n";
    c1.display();

    cout << "\nCopied Car Details (After modification of original):\n";
    c2.display();

    return 0;
}
